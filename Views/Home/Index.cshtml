@model IEnumerable<Product>
@{
    ViewData["Title"] = "Products";
}

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1><i class="fas fa-box me-2"></i>Products</h1>
            <a href="/Home/Create" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i>Add New Product
            </a>
        </div>
    </div>
</div>

<!-- Search and Filter Section -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0"><i class="fas fa-search me-2"></i>Search & Filter</h5>
    </div>
    <div class="card-body">
        <form id="searchForm">
            <div class="row g-3">
                <div class="col-md-4">
                    <label for="searchText" class="form-label">Search Name/Description</label>
                    <input type="text" class="form-control" id="searchText" placeholder="Enter search term...">
                </div>
                <div class="col-md-3">
                    <label for="minPrice" class="form-label">Min Price</label>
                    <input type="number" class="form-control" id="minPrice" step="0.01" placeholder="0.00">
                </div>
                <div class="col-md-3">
                    <label for="maxPrice" class="form-label">Max Price</label>
                    <input type="number" class="form-control" id="maxPrice" step="0.01" placeholder="9999.99">
                </div>
                <div class="col-md-2">
                    <label for="activeFilter" class="form-label">Status</label>
                    <select class="form-control" id="activeFilter">
                        <option value="">All</option>
                        <option value="true">Active</option>
                        <option value="false">Inactive</option>
                    </select>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-12">
                    <button type="button" class="btn btn-primary me-2" onclick="searchProducts()">
                        <i class="fas fa-search me-1"></i>Search
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="clearSearch()">
                        <i class="fas fa-times me-1"></i>Clear
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Products Table -->
<div class="card">
    <div class="card-header">
        <h5 class="mb-0"><i class="fas fa-list me-2"></i>Product List</h5>
    </div>
    <div class="card-body">
        <div id="productsTableContainer">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Price</th>
                                <th>Stock</th>
                                <th>Created Date</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in Model)
                            {
                                <tr>
                                    <td>@product.Id</td>
                                    <td><strong>@product.Name</strong></td>
                                    <td>@product.Description</td>
                                    <td>
                                        <span class="text-success fw-bold">$@product.Price.ToString("F2")</span>
                                    </td>
                                    <td>
                                        <span class="badge @(product.Stock <= 10 ? "bg-warning" : "bg-success")">
                                            @product.Stock
                                        </span>
                                    </td>
                                    <td>@product.CreatedDate.ToString("MMM dd, yyyy")</td>
                                    <td>
                                        <span class="badge @(product.IsActive ? "bg-success" : "bg-secondary")">
                                            @(product.IsActive ? "Active" : "Inactive")
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            <a href="/Home/Details/@product.Id" class="btn btn-outline-info" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a href="/Home/Edit/@product.Id" class="btn btn-outline-warning" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button class="btn btn-outline-danger" onclick="deleteProduct(@product.Id)" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                    <h4 class="text-muted">No products found</h4>
                    <p class="text-muted">Start by adding your first product!</p>
                    <a href="/Home/Create" class="btn btn-primary">
                        <i class="fas fa-plus me-1"></i>Add Product
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function searchProducts() {
            const searchText = document.getElementById('searchText').value;
            const minPrice = document.getElementById('minPrice').value;
            const maxPrice = document.getElementById('maxPrice').value;
            const isActive = document.getElementById('activeFilter').value;

            let url = '/api/products?';
            const params = new URLSearchParams();

            if (searchText) params.append('search', searchText);
            if (minPrice) params.append('minPrice', minPrice);
            if (maxPrice) params.append('maxPrice', maxPrice);
            if (isActive) params.append('isActive', isActive);

            try {
                const response = await fetch('/api/products?' + params.toString());
                const products = await response.json();
                updateProductsTable(products);
            } catch (error) {
                console.error('Error searching products:', error);
                alert('Error searching products. Please try again.');
            }
        }

        function clearSearch() {
            document.getElementById('searchText').value = '';
            document.getElementById('minPrice').value = '';
            document.getElementById('maxPrice').value = '';
            document.getElementById('activeFilter').value = '';
            location.reload();
        }

        function updateProductsTable(products) {
            let html = '';
            
            if (products.length > 0) {
                html = `
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Price</th>
                                    <th>Stock</th>
                                    <th>Created Date</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>`;
                
                products.forEach(product => {
                    const createdDate = new Date(product.createdDate).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'short',
                        day: '2-digit'
                    });
                    
                    html += `
                        <tr>
                            <td>${product.id}</td>
                            <td><strong>${product.name}</strong></td>
                            <td>${product.description}</td>
                            <td><span class="text-success fw-bold">$${product.price.toFixed(2)}</span></td>
                            <td><span class="badge ${product.stock <= 10 ? 'bg-warning' : 'bg-success'}">${product.stock}</span></td>
                            <td>${createdDate}</td>
                            <td><span class="badge ${product.isActive ? 'bg-success' : 'bg-secondary'}">${product.isActive ? 'Active' : 'Inactive'}</span></td>
                            <td>
                                <div class="btn-group btn-group-sm" role="group">
                                    <a href="/Home/Details/${product.id}" class="btn btn-outline-info" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="/Home/Edit/${product.id}" class="btn btn-outline-warning" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button class="btn btn-outline-danger" onclick="deleteProduct(${product.id})" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>`;
                });
                
                html += '</tbody></table></div>';
            } else {
                html = `
                    <div class="text-center py-5">
                        <i class="fas fa-search fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">No products found</h4>
                        <p class="text-muted">Try adjusting your search criteria.</p>
                    </div>`;
            }
            
            document.getElementById('productsTableContainer').innerHTML = html;
        }

        async function deleteProduct(id) {
            if (confirm('Are you sure you want to delete this product?')) {
                try {
                    const response = await fetch(`/api/products/${id}`, {
                        method: 'DELETE'
                    });
                    
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error deleting product. Please try again.');
                    }
                } catch (error) {
                    console.error('Error deleting product:', error);
                    alert('Error deleting product. Please try again.');
                }
            }
        }
    </script>
}